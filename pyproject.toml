[tool.black]
line-length = 120
target-version = ['py311']
exclude = '''
(
  /(
    | \.git
    | \.mypy_cache
    | \.tox
    | \.venv
    | \bazel-*
    | \bazel-bin
    | \bazel-genfiles
    | \bazel-out
    | \bazel-testlogs
  )/
)
'''

[tool.isort]
py_version = 311
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip = [".gitignore"]
profile = "black"

[tool.pyright]
diagnosticMode = "openFilesOnly"
typeCheckingMode = "basic"
include = ["."]
exclude = [
    "bazel-*",
    ".mypy_cache",
    "__pycache__",
    ".null-ls*",
]
reportMissingImports = false
reportMissingTypeArgument = "error"
reportMissingParameterType = true
reportOptionalMemberAccess = false
reportOptionalSubscript = false
reportImportCycles = "error"
reportUnusedClass = "warning"
reportUnusedImport = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
autoSearchPaths = true
useLibraryCodeForTypes = true

[[tool.pyright.executionEnvironments]]
root = "."

[tool.pylsp-mypy]
ignore-missing-imports = true
enabled = true
live_mode = true
strict = true

[tool.mypy]
# plugins = ["pydantic.mypy"]
hide_error_codes = false
ignore_missing_imports = true
check_untyped_defs = true
strict_equality = true

no_implicit_reexport = true
no_implicit_optional = true

warn_redundant_casts = true
warn_unused_ignores = true

disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_any_generics = true
# strict = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = []
line-length = 120

[tool.pylint.format]
max-line-length = 120

[tool.pylint."MESSAGES CONTROL"]
# Reasons disabled:
# duplicate-code - unavoidable
# too-many-* - are not enforced for the sake of readability
# too-few-* - same as too-many-*
disable = [
    "consider-using-assignment-expr",
    "duplicate-code",
    "import-error",
    "invalid-name",
    "logging-fstring-interpolation",
    "line-too-long",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "no-name-in-module",
    "parse-error",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-public-methods",
    "too-many-return-statements",
    # "unsubscriptable-object",
]

[tool.pylint.MASTER]
jobs = 2
load-plugins = [
    "pylint.extensions.code_style",
    "pylint.extensions.typing",
]

[tool.pylint.REPORTS]
score = false

[tool.pylint.TYPECHECK]
ignored-classes = [
    "_CountingAttr",  # for attrs
]

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"

[tool.pylint.TYPING]
runtime-typing = false

[tool.pylint.CODE_STYLE]
max-line-length-suggestions = 120
